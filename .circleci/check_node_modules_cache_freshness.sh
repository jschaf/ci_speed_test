#!/usr/bin/env bash

set -o nounset
set -o errexit
set -o pipefail

# Determines if the node_modules cache is fresh.
#
# The cache is fresh if the node_modules cache key for the current state of the
# repo stored in .circleci/node_modules_cache_key matches the
# value stored inside node_modules/cache-key.
#
# This script exports a number of variables so subsequent steps in this job
# can determine if the cache was stale or fresh.
#
# -   NODE_MODULES_CACHE_STATUS: either 'fresh' or 'stale'
#
# -   NODE_MODULES_CACHE_HASH_FILE: the absolute path to the hash of the
#     node_modules cache
#
# -   NODE_MODULES_CACHE_HASH: the value of the cache file.

current_hash_file='/home/ci/ci_speed_test/.circleci/node_modules_cache_key'
if [[ ! -e "${current_hash_file}" ]]; then
  echo "ERROR: node_modules cache key file not found at ${current_hash_file}."
  echo '   The cache key file should be created in the checkout_heap_repo step.'
fi
current_hash="$(< "${current_hash_file}")"

cache_hash_file='/dev/shm/heap/node_modules/cache-key'
cache_hash='<none>'
cache_status='stale'
if [[ -f "${cache_hash_file}" ]]; then
  cache_hash="$(< ${cache_hash_file})"
  if [[ "${current_hash}" == "${cache_hash}" ]]; then
    cache_status='fresh'
  fi
fi

printf 'value from %-55s %s\n' "${current_hash_file}" "${current_hash}"
printf 'value from %-55s %s\n' "${cache_hash_file}" "${cache_hash}"
echo "cache_status: ${cache_status}"

# Export variables so they can be used in this same job.
# For BASH_ENV docs: https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
echo "export NODE_MODULES_CACHE_STATUS=${cache_status}" >> "${BASH_ENV}"
echo "export NODE_MODULES_CACHE_HASH_FILE=${cache_hash_file}" >> "${BASH_ENV}"
echo "export NODE_MODULES_CACHE_HASH=${current_hash}" >> "${BASH_ENV}"
